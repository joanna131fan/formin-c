    // print once per run
            nt,         // 1
            NFil,       // 2
            irLigand,   // 3
            brLigand,   // 4
            Force,      // 5
            kdimer,     // 6
            dimerDist0, // 7
            baseSepDistance);     // 8

    for(i=0;i<=NumberiSites;i++)
    {
        fprintf(fList, " %lf", POcclude_NumSites[i]); // 8 + (i+1)
    }
    for(i=0;i<=NumberiSites;i++)
    {
        fprintf(fList, " %lf", PAvailable_NumSites[i]); // 8 + (NumberiSites+1) + (i+1)
    }

    // per filament
    for(nf=0;nf<NFil;nf++)
    {

        fprintf(fList, " %ld %f %f %f %f %f",
                N[nf],              // 9 + 2*(NumberiSites+1) + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                ksStatistic[nf],    // 10 + 2*(NumberiSites+1) + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                reeBar[nf],         // 11 + 2*(NumberiSites+1) + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                ree2Bar[nf],        // 12 + 2*(NumberiSites+1) + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                rMBar[nf],          // 13 + 2*(NumberiSites+1) + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                rM2Bar[nf]);        // 14 + 2*(NumberiSites+1) + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf

        for (iy=0;iy<iSiteTotal[nf];iy++)
        {
            fprintf(fList, " %ld %e %e %e %e %f %f",
                iSite[nf][iy],              // 15 + 2*(NumberiSites+1) + 7*iBind + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                POcclude[nf][iy],           // 16 + 2*(NumberiSites+1) + 7*iBind + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                1-POcclude[nf][iy],         // 17 + 2*(NumberiSites+1) + 7*iBind + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                PMembraneOcclude[nf][iy],   // 18 + 2*(NumberiSites+1) + 7*iBind + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                Prvec0[nf][iy],             // 19 + 2*(NumberiSites+1) + 7*iBind + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                rMiSiteBar[nf][iy],         // 20 + 2*(NumberiSites+1) + 7*iBind + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
                rM2iSiteBar[nf][iy]);       // 21 + 2*(NumberiSites+1) + 7*iBind + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
        }


        fprintf(fList, " %e %e",
                POccludeBase[nf],           // 22 + 2*(NumberiSites+1) + 7*(iSiteTotal-1) + (6 + 7*iSiteTotal + 2)*nf
                1-POccludeBase[nf]);        // 23 + 2*(NumberiSites+1) + 7*(iSiteTotal-1) + (6 + 7*iSiteTotal + 2)*nf

        for(nf2=0;nf2<NFil;nf2++)
        {
            fprintf(fList, " %f",
                reeFilBar[nf][nf2]);        // 24 + 2*(NumberiSites+1) + 7*(iSiteTotal-1) + nf2 + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
        }

        for(nf2=0;nf2<NFil;nf2++)
        {
            fprintf(fList, " %f",
                    ree2FilBar[nf][nf2]);   // 25 + 2*(NumberiSites+1) + 7*(iSiteTotal-1) + (NFil-1) + nf2 + (6 + 7*iSiteTotal + 2 + NFil + NFil)*nf
        }

        // print distribution of iSite Locations
        if(0)
        {
            for (iy=0;iy<iSiteTotal[nf];iy++)
            {
                iSiteCurrent=iSite[nf][iy];
                for (j=0;j<NBINSPOLYMER;j++)
                {
                    fprintf(fList, " %ld", polymerLocationCounts[nf][iSiteCurrent][j]);
                }
            }
        }

    } // end printing data for each filament

    if (CD3ZETA)
    {
        for (i=0; i<NumberiSites;i++)
        {
            fprintf(fList, " %lf", occupied[i]);
        }

        fprintf(fList, " %s", occupiedSitesNoSpace);
    }

    fprintf(fList, "\n");
